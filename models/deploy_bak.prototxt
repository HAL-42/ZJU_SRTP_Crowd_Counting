name: "dcc_crowdnet"
input: "data"
input_dim: 1
input_dim: 3
input_dim: 225
input_dim: 225

# Deep net
layer {
  bottom: "data"
  top: "conv1_1"
  name: "conv1_1"
  type: "Convolution"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_1"
  top: "conv1_1"
  name: "relu1_1"
  type: "ReLU"
}
layer {
  bottom: "conv1_1"
  top: "conv1_2"
  name: "conv1_2"
  type: "Convolution"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_2"
  top: "conv1_2"
  name: "relu1_2"
  type: "ReLU"
}
layer {
  bottom: "conv1_2"
  top: "pool1"
  name: "pool1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool1"
  top: "conv2_1"
  name: "conv2_1"
  type: "Convolution"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_1"
  top: "conv2_1"
  name: "relu2_1"
  type: "ReLU"
}
layer {
  bottom: "conv2_1"
  top: "conv2_2"
  name: "conv2_2"
  type: "Convolution"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_2"
  top: "conv2_2"
  name: "relu2_2"
  type: "ReLU"
}
layer {
  bottom: "conv2_2"
  top: "pool2"
  name: "pool2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool2"
  top: "conv3_1"
  name: "conv3_1"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_1"
  top: "conv3_1"
  name: "relu3_1"
  type: "ReLU"
}
layer {
  bottom: "conv3_1"
  top: "conv3_2"
  name: "conv3_2"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_2"
  top: "conv3_2"
  name: "relu3_2"
  type: "ReLU"
}
layer {
  bottom: "conv3_2"
  top: "conv3_3"
  name: "conv3_3"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_3"
  top: "conv3_3"
  name: "relu3_3"
  type: "ReLU"
}
layer {
  bottom: "conv3_3"
  top: "pool3"
  name: "pool3"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool3"
  top: "conv4_1"
  name: "conv4_1"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_1"
  top: "conv4_1"
  name: "relu4_1"
  type: "ReLU"
}
layer {
  bottom: "conv4_1"
  top: "conv4_2"
  name: "conv4_2"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_2"
  top: "conv4_2"
  name: "relu4_2"
  type: "ReLU"
}
layer {
  bottom: "conv4_2"
  top: "conv4_3"
  name: "conv4_3"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_3"
  top: "conv4_3"
  name: "relu4_3"
  type: "ReLU"
}
layer {
  bottom: "conv4_3"
  top: "pool4"
  name: "pool4"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 1
  }
}
layer {
  bottom: "pool4"
  top: "conv5_1"
  name: "conv5_1"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 2
    kernel_size: 3
    dilation: 2
  }
}
layer {
  bottom: "conv5_1"
  top: "conv5_1"
  name: "relu5_1"
  type: "ReLU"
}
layer {
  bottom: "conv5_1"
  top: "conv5_2"
  name: "conv5_2"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 2
    kernel_size: 3
    dilation: 2
  }
}
layer {
  bottom: "conv5_2"
  top: "conv5_2"
  name: "relu5_2"
  type: "ReLU"
}
layer {
  bottom: "conv5_2"
  top: "conv5_3"
  name: "conv5_3"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 2
    kernel_size: 3
    dilation: 2
  }
}
layer {
  bottom: "conv5_3"
  top: "conv5_3"
  name: "relu5_3"
  type: "ReLU"
}

#Shallow net
layer {
  bottom: "data"
  top: "sw_conv1"
  name: "sw_conv1"
  type: "Convolution"
  convolution_param {
    num_output: 24
    pad: 3
    kernel_size: 5
  }
}
layer {
  bottom: "sw_conv1"
  top: "sw_conv1"
  name: "sw_relu1"
  type: "ReLU"
}
layer {
  bottom: "sw_conv1"
  top: "sw_pool1"
  name: "sw_pool1"
  type: "Pooling"
  pooling_param {
    pool: AVE
    kernel_size: 5
    stride: 2
  }
}
layer {
  bottom: "sw_pool1"
  top: "sw_conv2"
  name: "sw_conv2"
  type: "Convolution"
  convolution_param {
    num_output: 24
    pad: 3
    kernel_size: 5
  }
}
layer {
  bottom: "sw_conv2"
  top: "sw_conv2"
  name: "sw_relu2"
  type: "ReLU"
}
layer {
  bottom: "sw_conv2"
  top: "sw_pool2"
  name: "sw_pool2"
  type: "Pooling"
  pooling_param {
    pool: AVE
    kernel_size: 5
    stride: 2
  }
}
layer {
  bottom: "sw_pool2"
  top: "sw_conv3"
  name: "sw_conv3"
  type: "Convolution"
  convolution_param {
    num_output: 24
    pad: 3
    kernel_size: 5
  }
}
layer {
  bottom: "sw_conv3"
  top: "sw_conv3"
  name: "sw_relu3"
  type: "ReLU"
}
layer {
  bottom: "sw_conv3"
  top: "sw_pool3"
  name: "sw_pool3"
  type: "Pooling"
  pooling_param {
    pool: AVE
    kernel_size: 5
    stride: 2
  }
}
# Combination of Deep and Shallow Nets
layer {
  name: "concat1"
  bottom: "conv5_3"
  bottom: "sw_pool3"
  top: "concat1"
  type: "Concat"
  concat_param {
    axis: 1
  }
}
layer {
  bottom: "concat1"
  top: "conv6"
  name: "conv6"
  type: "Convolution"
  convolution_param {
    num_output: 1
    kernel_size: 1
  }
}
#layer {
#  bottom: "conv6"
#  top: "conv6"
#  name: "conv6"
#  type: "ReLU"
#}
